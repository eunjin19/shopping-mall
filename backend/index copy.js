import express from "express";
import cors from "cors";
import dotenv from "dotenv";
import mysql from "mysql2";
import authRouter from "./routes/auth.js";  // auth ÎùºÏö∞ÌÑ∞ import

dotenv.config();

const app = express();

// Í∏∞Î≥∏ ÎØ∏Îì§Ïõ®Ïñ¥
app.use(cors());
app.use(express.json());

// MySQL Ïó∞Í≤∞ ÏÑ§Ï†ï
let database = null;

const connectDB = () => {
  try {
    database = mysql.createConnection({
      host: "127.0.0.1",
      user: "root",
      password: "1234",
      database: "shoppingmall"
    });

    database.connect(err => {
      if (err) {
        console.error("‚ùå DB Ïó∞Í≤∞ Ïã§Ìå®:", err.message);
        database = null;
      } else {
        console.log("‚úÖ MySQL Connected!");
      }
    });
  } catch (error) {
    console.error("‚ùå DB ÏÑ§Ï†ï Ïò§Î•ò:", error.message);
    database = null;
  }
};

// DB Ïó∞Í≤∞ Ïã§Ìñâ
connectDB();

// DBÎ•º reqÏóê Ï†ÑÎã¨ÌïòÎäî ÎØ∏Îì§Ïõ®Ïñ¥
app.use((req, res, next) => {
  req.db = database;
  next();
});

// ==================== ÎùºÏö∞ÌÑ∞ Ïó∞Í≤∞ ====================
app.use("/api/auth", authRouter);  // auth ÎùºÏö∞ÌÑ∞ Ïó∞Í≤∞

// ==================== Í∏∞Î≥∏ ÎùºÏö∞Ìä∏ ====================
app.get("/", (req, res) => {
  res.json({ 
    message: "Shopping Mall Backend API",
    status: "running",
    database: database ? "connected" : "disconnected",
    endpoints: {
      auth: ["/api/auth/register", "/api/auth/login"],
      products: ["/api/products"]
    }
  });
});

// ==================== ÏÉÅÌíà API ====================
app.get("/api/products", (req, res) => {
  if (!database) {
    return res.json([
      {
        id: 1, name: "ÌÖåÏä§Ìä∏ ÏÉÅÌíà1", brand: "Î∏åÎûúÎìúA", price: 10000,
        description: "ÌÖåÏä§Ìä∏Ïö© ÏÉÅÌíàÏûÖÎãàÎã§.", image: "sample1.jpg", stock: 50
      },
      {
        id: 2, name: "ÌÖåÏä§Ìä∏ ÏÉÅÌíà2", brand: "Î∏åÎûúÎìúB", price: 20000,
        description: "ÌÖåÏä§Ìä∏Ïö© ÏÉÅÌíàÏûÖÎãàÎã§.", image: "sample2.jpg", stock: 30
      }
    ]);
  }

  const sql = "SELECT * FROM products ORDER BY created_at DESC";
  database.query(sql, (err, results) => {
    if (err) {
      console.error("ÏÉÅÌíà Ï°∞Ìöå ÏóêÎü¨:", err);
      return res.status(500).json({ error: "DB Ï°∞Ìöå Ïã§Ìå®" });
    }
    res.json(results);
  });
});

// ÌäπÏ†ï ÏÉÅÌíà Ï°∞Ìöå
app.get("/api/products/:id", (req, res) => {
  const { id } = req.params;
  
  if (!database) {
    const sampleProduct = { id: 1, name: "ÌÖåÏä§Ìä∏ ÏÉÅÌíà1", brand: "Î∏åÎûúÎìúA", price: 10000 };
    return res.json(sampleProduct);
  }

  const sql = "SELECT * FROM products WHERE id = ?";
  database.query(sql, [id], (err, results) => {
    if (err) {
      console.error("ÏÉÅÌíà ÏÉÅÏÑ∏ Ï°∞Ìöå ÏóêÎü¨:", err);
      return res.status(500).json({ error: "ÏÑúÎ≤Ñ Ïò§Î•ò" });
    }
    
    if (results.length === 0) {
      return res.status(404).json({ error: "ÏÉÅÌíàÏùÑ Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§" });
    }
    
    res.json(results[0]);
  });
});

// ÏóêÎü¨ Ìï∏Îì§ÎßÅ
app.use((err, req, res, next) => {
  console.error("ÏÑúÎ≤Ñ ÏóêÎü¨:", err);
  res.status(500).json({ error: "ÏÑúÎ≤Ñ ÎÇ¥Î∂Ä ÏóêÎü¨" });
});

// ÏÑúÎ≤Ñ Ïã§Ìñâ
const PORT = process.env.PORT || 5000;
app.listen(PORT, () => {
  console.log(`‚úÖ Server started on port ${PORT}`);
  console.log(`üåê API Endpoints:`);
  console.log(`   - GET  /`);
  console.log(`   - POST /api/auth/register`);
  console.log(`   - POST /api/auth/login`);
  console.log(`   - GET  /api/products`);
  console.log(`   - GET  /api/products/:id`);
});

export { database as db };